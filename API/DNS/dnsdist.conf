--- newServer({address="172.20.0.3", name="recursor", pool="recursor"})
--- setServerPolicy(firstAvailable)
--- addAction(AllRule(), PoolAction("recursor"))

-- Define backends
newServer({address="172.20.0.3", name="recursor", pool="default"})
newServer({address="172.20.0.3", name="recursor-filtered", pool="filtered"})

-- Create domain block lists
-- Adult content blocklist
newSuffixMatchNode("adult_domains")
adult_domains:add({"adult.com", "adult.org", "gambling.com", "xxx.com"})
-- Add more domains to block as needed

-- Create filtering functions
function blockAdultSites(dq)
  -- If domain is in adult domains list, refuse the query
  if adult_domains:check(dq.qname) then
    return DNSAction.Refused
  end
  return DNSAction.None
end

-- Enable API for dynamic client management
webserver("0.0.0.0:8083")
setWebserverConfig({password="admin_password", apiKey="secure_api_key"})

-- Client IP to filtering policy mapping
client_policies = {}

function getClientPool(dq)
  local client = dq.remoteaddr:toString()
  return client_policies[client] or "default"  -- Default no filtering
end

-- Apply filtering to filtered pool only
addPoolRule("filtered", function(dq)
  return blockAdultSites(dq)
end)

-- Route clients to appropriate pools based on their policy
addAction(AllRule(), PoolAction(getClientPool))