services:
  go-proxie:
    image: ghcr.io/router-ease/go-proxie:latest
    build: .
    container_name: go-proxie
    restart: unless-stopped
    networks:
      - backend-network
    ports:
      - "8089:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.go-proxie.rule=PathPrefix(`/routerease/dns/`)"
      - "traefik.http.services.go-proxie.loadbalancer.server.port=8080"
      - "traefik.http.routers.go-proxie.tls=true"
      - "traefik.http.routers.go-proxie.tls.certresolver=letsencrypt"
      - "traefik.http.routers.go-proxie.middlewares=cors-all@file"

  dns_db:
    image: postgres:alpine
    container_name: dns_db
    environment:
      POSTGRES_DB: dns
      POSTGRES_USER: dns
      POSTGRES_PASSWORD: password
    volumes:
      - ./dns-volumen:/var/lib/postgresql/data
    networks:
      - backend-network


volumes:
  dns-volumen: